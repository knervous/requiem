import * as EQMessage from './def/eq';
export interface EQClientPacket {


LoginMessage: (payload: EQMessage.LoginMessage) => Uint8Array,
  LoginReply: (payload: EQMessage.LoginReply) => Uint8Array,
  PlayEverquest: (payload: EQMessage.PlayEverquest) => Uint8Array,
  PlayEverquestResponse: (payload: EQMessage.PlayEverquestResponse) => Uint8Array,
  LoginRequest: (payload: EQMessage.LoginRequest) => Uint8Array,
  LoginServerResponse: (payload: EQMessage.LoginServerResponse) => Uint8Array,
  EnterWorld: (payload: EQMessage.EnterWorld) => Uint8Array,
  LoginInfo: (payload: EQMessage.LoginInfo) => Uint8Array,
  WebInitiateConnection: (payload: EQMessage.WebInitiateConnection) => Uint8Array,
  CharacterSelect: (payload: EQMessage.CharacterSelect) => Uint8Array,
  ZoneServerInfo: (payload: EQMessage.ZoneServerInfo) => Uint8Array,
  ClientZoneEntry: (payload: EQMessage.ClientZoneEntry) => Uint8Array,
  SetServerFilter: (payload: EQMessage.SetServerFilter) => Uint8Array,
  Zero: (payload: EQMessage.Zero) => Uint8Array,
  ClientError: (payload: EQMessage.ClientError) => Uint8Array,
  ApproveZone: (payload: EQMessage.ApproveZone) => Uint8Array,
  Int: (payload: EQMessage.Int) => Uint8Array,
  PlayerPositionUpdateClient: (payload: EQMessage.PlayerPositionUpdateClient) => Uint8Array,
  Consent: (payload: EQMessage.Consent) => Uint8Array,
  ClientTarget: (payload: EQMessage.ClientTarget) => Uint8Array,
  Shielding: (payload: EQMessage.Shielding) => Uint8Array,
  EntityId: (payload: EQMessage.EntityId) => Uint8Array,
  AdventureRequest: (payload: EQMessage.AdventureRequest) => Uint8Array,
  Bool: (payload: EQMessage.Bool) => Uint8Array,
  Consume: (payload: EQMessage.Consume) => Uint8Array,
  AdventureMerchant: (payload: EQMessage.AdventureMerchant) => Uint8Array,
  Adventure_Purchase: (payload: EQMessage.Adventure_Purchase) => Uint8Array,
  Consider: (payload: EQMessage.Consider) => Uint8Array,
  Surname: (payload: EQMessage.Surname) => Uint8Array,
  GMTrainee: (payload: EQMessage.GMTrainee) => Uint8Array,
  GMTrainEnd: (payload: EQMessage.GMTrainEnd) => Uint8Array,
  GMSkillChange: (payload: EQMessage.GMSkillChange) => Uint8Array,
  Duel: (payload: EQMessage.Duel) => Uint8Array,
  DuelResponse: (payload: EQMessage.DuelResponse) => Uint8Array,
  SpawnAppearance: (payload: EQMessage.SpawnAppearance) => Uint8Array,
  BazaarInspect: (payload: EQMessage.BazaarInspect) => Uint8Array,
  Death: (payload: EQMessage.Death) => Uint8Array,
  MoveCoin: (payload: EQMessage.MoveCoin) => Uint8Array,
  ItemViewRequest: (payload: EQMessage.ItemViewRequest) => Uint8Array,
  MoveItem: (payload: EQMessage.MoveItem) => Uint8Array,
  ChannelMessage: (payload: EQMessage.ChannelMessage) => Uint8Array,
  WearChange: (payload: EQMessage.WearChange) => Uint8Array,
  Save: (payload: EQMessage.Save) => Uint8Array,
  Who_All: (payload: EQMessage.Who_All) => Uint8Array,
  GMZoneRequest: (payload: EQMessage.GMZoneRequest) => Uint8Array,
  DyeStruct: (payload: EQMessage.DyeStruct) => Uint8Array,
  LootingItem: (payload: EQMessage.LootingItem) => Uint8Array,
  GuildUpdate_PublicNote: (payload: EQMessage.GuildUpdate_PublicNote) => Uint8Array,
  GuildMOTD: (payload: EQMessage.GuildMOTD) => Uint8Array,
  SetRunMode: (payload: EQMessage.SetRunMode) => Uint8Array,
  GuildMakeLeader: (payload: EQMessage.GuildMakeLeader) => Uint8Array,
  GuildDemoteStruct: (payload: EQMessage.GuildDemoteStruct) => Uint8Array,
  GuildCommand: (payload: EQMessage.GuildCommand) => Uint8Array,
  GuildInviteAccept: (payload: EQMessage.GuildInviteAccept) => Uint8Array,
  ManaChange: (payload: EQMessage.ManaChange) => Uint8Array,
  MemorizeSpell: (payload: EQMessage.MemorizeSpell) => Uint8Array,
  SwapSpell: (payload: EQMessage.SwapSpell) => Uint8Array,
  CastSpell: (payload: EQMessage.CastSpell) => Uint8Array,
  DeleteItem: (payload: EQMessage.DeleteItem) => Uint8Array,
  CombatAbility: (payload: EQMessage.CombatAbility) => Uint8Array,
  Resurrect: (payload: EQMessage.Resurrect) => Uint8Array,
  GMSummon: (payload: EQMessage.GMSummon) => Uint8Array,
  TradeBusy: (payload: EQMessage.TradeBusy) => Uint8Array,
  TradeRequest: (payload: EQMessage.TradeRequest) => Uint8Array,
  CancelTrade: (payload: EQMessage.CancelTrade) => Uint8Array,
  TradeAccept: (payload: EQMessage.TradeAccept) => Uint8Array,
  RandomReq: (payload: EQMessage.RandomReq) => Uint8Array,
  SpellBuffPacket: (payload: EQMessage.SpellBuffPacket) => Uint8Array,
  GMName: (payload: EQMessage.GMName) => Uint8Array,
  GMKill: (payload: EQMessage.GMKill) => Uint8Array,
  GMLastName: (payload: EQMessage.GMLastName) => Uint8Array,
  GMToggle: (payload: EQMessage.GMToggle) => Uint8Array,
  LFG: (payload: EQMessage.LFG) => Uint8Array,
  TraderClick: (payload: EQMessage.TraderClick) => Uint8Array,
  Merchant_Click: (payload: EQMessage.Merchant_Click) => Uint8Array,
  BazaarSearch: (payload: EQMessage.BazaarSearch) => Uint8Array,
  Merchant_Sell: (payload: EQMessage.Merchant_Sell) => Uint8Array,
  Merchant_Purchase: (payload: EQMessage.Merchant_Purchase) => Uint8Array,
  ClickObjectAction: (payload: EQMessage.ClickObjectAction) => Uint8Array,
  ClickObject: (payload: EQMessage.ClickObject) => Uint8Array,
  TradeskillFavorites: (payload: EQMessage.TradeskillFavorites) => Uint8Array,
  RecipesSearch: (payload: EQMessage.RecipesSearch) => Uint8Array,
  RecipeAutoCombine: (payload: EQMessage.RecipeAutoCombine) => Uint8Array,
  NewCombine: (payload: EQMessage.NewCombine) => Uint8Array,
  ItemNamePacket: (payload: EQMessage.ItemNamePacket) => Uint8Array,
  AugmentItem: (payload: EQMessage.AugmentItem) => Uint8Array,
  ClickDoor: (payload: EQMessage.ClickDoor) => Uint8Array,
  FaceChange: (payload: EQMessage.FaceChange) => Uint8Array,
  GroupInvite: (payload: EQMessage.GroupInvite) => Uint8Array,
  GroupGeneric: (payload: EQMessage.GroupGeneric) => Uint8Array,
  GMEmoteZone: (payload: EQMessage.GMEmoteZone) => Uint8Array,
  Inspect: (payload: EQMessage.Inspect) => Uint8Array,
  DeleteSpell: (payload: EQMessage.DeleteSpell) => Uint8Array,
  PetitionBug: (payload: EQMessage.PetitionBug) => Uint8Array,
  BugStruct: (payload: EQMessage.BugStruct) => Uint8Array,
  String: (payload: EQMessage.String) => Uint8Array,
  Petition: (payload: EQMessage.Petition) => Uint8Array,
  PetitionUpdate: (payload: EQMessage.PetitionUpdate) => Uint8Array,
  PetCommand: (payload: EQMessage.PetCommand) => Uint8Array,
  BookRequest: (payload: EQMessage.BookRequest) => Uint8Array,
  Emote: (payload: EQMessage.Emote) => Uint8Array,
  GMDelCorpse: (payload: EQMessage.GMDelCorpse) => Uint8Array,
  GMKick: (payload: EQMessage.GMKick) => Uint8Array,
  Illusion: (payload: EQMessage.Illusion) => Uint8Array,
  BecomeNPC: (payload: EQMessage.BecomeNPC) => Uint8Array,
  EnvDamage2: (payload: EQMessage.EnvDamage2) => Uint8Array,
  CombatDamage: (payload: EQMessage.CombatDamage) => Uint8Array,
  AA_Action: (payload: EQMessage.AA_Action) => Uint8Array,
  TraderBuy: (payload: EQMessage.TraderBuy) => Uint8Array,
  Trader_ShowItems: (payload: EQMessage.Trader_ShowItems) => Uint8Array,
  PickPocket: (payload: EQMessage.PickPocket) => Uint8Array,
  BindWound: (payload: EQMessage.BindWound) => Uint8Array,
  TrackTarget: (payload: EQMessage.TrackTarget) => Uint8Array,
  Split: (payload: EQMessage.Split) => Uint8Array,
  StartTribute: (payload: EQMessage.StartTribute) => Uint8Array,
  TributeItem: (payload: EQMessage.TributeItem) => Uint8Array,
  TributeMoney: (payload: EQMessage.TributeMoney) => Uint8Array,
  SelectTributeReq: (payload: EQMessage.SelectTributeReq) => Uint8Array,
  TributeInfo: (payload: EQMessage.TributeInfo) => Uint8Array,
  uint32: (payload: EQMessage.uint32) => Uint8Array,
  ControlBoat: (payload: EQMessage.ControlBoat) => Uint8Array,
  FindPersonRequest: (payload: EQMessage.FindPersonRequest) => Uint8Array,
  BankerChange: (payload: EQMessage.BankerChange) => Uint8Array,
  SetTitle: (payload: EQMessage.SetTitle) => Uint8Array,
  ItemVerifyRequest: (payload: EQMessage.ItemVerifyRequest) => Uint8Array,
  ItemPacket: (payload: EQMessage.ItemPacket) => Uint8Array,
  ColoredText: (payload: EQMessage.ColoredText) => Uint8Array,
  ItemRecastDelay: (payload: EQMessage.ItemRecastDelay) => Uint8Array,
  FormattedMessage: (payload: EQMessage.FormattedMessage) => Uint8Array,
  InterruptCast: (payload: EQMessage.InterruptCast) => Uint8Array,
  Spawn: (payload: EQMessage.Spawn) => Uint8Array,
  TaskHistory: (payload: EQMessage.TaskHistory) => Uint8Array,
  Titles: (payload: EQMessage.Titles) => Uint8Array,
  Door: (payload: EQMessage.Door) => Uint8Array,
  ZonePoints: (payload: EQMessage.ZonePoints) => Uint8Array,
  TributeAbility: (payload: EQMessage.TributeAbility) => Uint8Array,
  GuildTributeAbility: (payload: EQMessage.GuildTributeAbility) => Uint8Array,
  TitleList: (payload: EQMessage.TitleList) => Uint8Array,
  MaxCharacters: (payload: EQMessage.MaxCharacters) => Uint8Array,
  AAExpUpdate: (payload: EQMessage.AAExpUpdate) => Uint8Array,
  Action: (payload: EQMessage.Action) => Uint8Array,
  AdventureRequestResponse: (payload: EQMessage.AdventureRequestResponse) => Uint8Array,
  AdventureFinish: (payload: EQMessage.AdventureFinish) => Uint8Array,
  AdventurePoints_Update: (payload: EQMessage.AdventurePoints_Update) => Uint8Array,
  Animation: (payload: EQMessage.Animation) => Uint8Array,
  AnnoyingZoneUnknown: (payload: EQMessage.AnnoyingZoneUnknown) => Uint8Array,
  BecomeTrader: (payload: EQMessage.BecomeTrader) => Uint8Array,
  BeginCast: (payload: EQMessage.BeginCast) => Uint8Array,
  Charm: (payload: EQMessage.Charm) => Uint8Array,
  Camera: (payload: EQMessage.Camera) => Uint8Array,
  ConsentResponse: (payload: EQMessage.ConsentResponse) => Uint8Array,
  EnduranceUpdate: (payload: EQMessage.EnduranceUpdate) => Uint8Array,
  ExpUpdate: (payload: EQMessage.ExpUpdate) => Uint8Array,
  Object: (payload: EQMessage.Object) => Uint8Array,
  GroupJoin: (payload: EQMessage.GroupJoin) => Uint8Array,
  GuildJoin: (payload: EQMessage.GuildJoin) => Uint8Array,
  GuildManageRemove: (payload: EQMessage.GuildManageRemove) => Uint8Array,
  GuildManageStatus: (payload: EQMessage.GuildManageStatus) => Uint8Array,
  GuildMemberUpdate: (payload: EQMessage.GuildMemberUpdate) => Uint8Array,
  SpawnHPUpdate: (payload: EQMessage.SpawnHPUpdate) => Uint8Array,
  IncreaseStat: (payload: EQMessage.IncreaseStat) => Uint8Array,
  ItemVerifyReply: (payload: EQMessage.ItemVerifyReply) => Uint8Array,
  LFG_Appearance: (payload: EQMessage.LFG_Appearance) => Uint8Array,
  LeadershipExpUpdate: (payload: EQMessage.LeadershipExpUpdate) => Uint8Array,
  LevelAppearance: (payload: EQMessage.LevelAppearance) => Uint8Array,
  LevelUpdate: (payload: EQMessage.LevelUpdate) => Uint8Array,
  ManaUpdate: (payload: EQMessage.ManaUpdate) => Uint8Array,
  MobEnduranceUpdate: (payload: EQMessage.MobEnduranceUpdate) => Uint8Array,
  MobHealth: (payload: EQMessage.MobHealth) => Uint8Array,
  MobManaUpdate: (payload: EQMessage.MobManaUpdate) => Uint8Array,
  MobRename: (payload: EQMessage.MobRename) => Uint8Array,
  moneyOnCorpseStruct: (payload: EQMessage.moneyOnCorpseStruct) => Uint8Array,
  MoneyUpdate: (payload: EQMessage.MoneyUpdate) => Uint8Array,
  MoveDoor: (payload: EQMessage.MoveDoor) => Uint8Array,
  NewSpawn: (payload: EQMessage.NewSpawn) => Uint8Array,
  NewZone: (payload: EQMessage.NewZone) => Uint8Array,
  PlayerProfile: (payload: EQMessage.PlayerProfile) => Uint8Array,
  ZoneInSendName: (payload: EQMessage.ZoneInSendName) => Uint8Array,
  RandomReply: (payload: EQMessage.RandomReply) => Uint8Array,
  RecipeReply: (payload: EQMessage.RecipeReply) => Uint8Array,
  RequestClientZoneChange: (payload: EQMessage.RequestClientZoneChange) => Uint8Array,
  AATable: (payload: EQMessage.AATable) => Uint8Array,
  SetTitleReply: (payload: EQMessage.SetTitleReply) => Uint8Array,
  Merchant_DelItem: (payload: EQMessage.Merchant_DelItem) => Uint8Array,
  SimpleMessage: (payload: EQMessage.SimpleMessage) => Uint8Array,
  SkillUpdate: (payload: EQMessage.SkillUpdate) => Uint8Array,
  Arrow: (payload: EQMessage.Arrow) => Uint8Array,
  SpellEffect: (payload: EQMessage.SpellEffect) => Uint8Array,
  Stamina: (payload: EQMessage.Stamina) => Uint8Array,
  Stun: (payload: EQMessage.Stun) => Uint8Array,
  TargetReject: (payload: EQMessage.TargetReject) => Uint8Array,
  TimeOfDay: (payload: EQMessage.TimeOfDay) => Uint8Array,
  TradeCoin: (payload: EQMessage.TradeCoin) => Uint8Array,
  TradeMoneyUpdate: (payload: EQMessage.TradeMoneyUpdate) => Uint8Array,
  TraderDelItem: (payload: EQMessage.TraderDelItem) => Uint8Array,
  TraderItemUpdate: (payload: EQMessage.TraderItemUpdate) => Uint8Array,
  UpdateLeadershipAA: (payload: EQMessage.UpdateLeadershipAA) => Uint8Array,
  Weather: (payload: EQMessage.Weather) => Uint8Array,
  ZoneChange: (payload: EQMessage.ZoneChange) => Uint8Array,
  ZoneInUnknown: (payload: EQMessage.ZoneInUnknown) => Uint8Array,
  AcceptNewTask: (payload: EQMessage.AcceptNewTask) => Uint8Array,
  AdventureInfo: (payload: EQMessage.AdventureInfo) => Uint8Array,
  ApplyPoison: (payload: EQMessage.ApplyPoison) => Uint8Array,
  ApproveWorld: (payload: EQMessage.ApproveWorld) => Uint8Array,
  BandolierItem: (payload: EQMessage.BandolierItem) => Uint8Array,
  BecomeCorpse: (payload: EQMessage.BecomeCorpse) => Uint8Array,
  CancelTask: (payload: EQMessage.CancelTask) => Uint8Array,
  DynamicWall: (payload: EQMessage.DynamicWall) => Uint8Array,
  GuildsListEntry: (payload: EQMessage.GuildsListEntry) => Uint8Array,
  LFGuild_SearchPlayer: (payload: EQMessage.LFGuild_SearchPlayer) => Uint8Array,
  LoadSpellSet: (payload: EQMessage.LoadSpellSet) => Uint8Array,
  LogServer: (payload: EQMessage.LogServer) => Uint8Array,
  OnLevelMessage: (payload: EQMessage.OnLevelMessage) => Uint8Array,
  PlayMP3: (payload: EQMessage.PlayMP3) => Uint8Array,
  PotionBeltItem: (payload: EQMessage.PotionBeltItem) => Uint8Array,
  PVPStatsEntry: (payload: EQMessage.PVPStatsEntry) => Uint8Array,
  BugReport: (payload: EQMessage.BugReport) => Uint8Array,
  SpecialMesg: (payload: EQMessage.SpecialMesg) => Uint8Array,
  TaskActivity: (payload: EQMessage.TaskActivity) => Uint8Array,
  TaskDescription: (payload: EQMessage.TaskDescription) => Uint8Array,
  ZoneUnavail: (payload: EQMessage.ZoneUnavail) => Uint8Array,
  
}
