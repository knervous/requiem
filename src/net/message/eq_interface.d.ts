import * as EQMessage from './def/eq';
export interface EQClientPacket {


LoginMessage: (payload: EQMessage.LoginMessage) => Uint8Array,
  LoginReply: (payload: EQMessage.LoginReply) => Uint8Array,
  PlayEverquest: (payload: EQMessage.PlayEverquest) => Uint8Array,
  PlayEverquestResponse: (payload: EQMessage.PlayEverquestResponse) => Uint8Array,
  LoginRequest: (payload: EQMessage.LoginRequest) => Uint8Array,
  LoginServerResponse: (payload: EQMessage.LoginServerResponse) => Uint8Array,
  NameApprove: (payload: EQMessage.NameApprove) => Uint8Array,
  CharCreate: (payload: EQMessage.CharCreate) => Uint8Array,
  String: (payload: EQMessage.String) => Uint8Array,
  Int: (payload: EQMessage.Int) => Uint8Array,
  EnterWorld: (payload: EQMessage.EnterWorld) => Uint8Array,
  GuildsList: (payload: EQMessage.GuildsList) => Uint8Array,
  CharacterSelect: (payload: EQMessage.CharacterSelect) => Uint8Array,
  LoginInfo: (payload: EQMessage.LoginInfo) => Uint8Array,
  Zero: (payload: EQMessage.Zero) => Uint8Array,
  ZoneServerInfo: (payload: EQMessage.ZoneServerInfo) => Uint8Array,
  WebInitiateConnection: (payload: EQMessage.WebInitiateConnection) => Uint8Array,
  ClientZoneEntry: (payload: EQMessage.ClientZoneEntry) => Uint8Array,
  SetServerFilter: (payload: EQMessage.SetServerFilter) => Uint8Array,
  ClientError: (payload: EQMessage.ClientError) => Uint8Array,
  ApproveZone: (payload: EQMessage.ApproveZone) => Uint8Array,
  PlayerPositionUpdateServer: (payload: EQMessage.PlayerPositionUpdateServer) => Uint8Array,
  Consent: (payload: EQMessage.Consent) => Uint8Array,
  ClientTarget: (payload: EQMessage.ClientTarget) => Uint8Array,
  Shielding: (payload: EQMessage.Shielding) => Uint8Array,
  EntityId: (payload: EQMessage.EntityId) => Uint8Array,
  AdventureRequest: (payload: EQMessage.AdventureRequest) => Uint8Array,
  Bool: (payload: EQMessage.Bool) => Uint8Array,
  Consume: (payload: EQMessage.Consume) => Uint8Array,
  AdventureMerchant: (payload: EQMessage.AdventureMerchant) => Uint8Array,
  Adventure_Purchase: (payload: EQMessage.Adventure_Purchase) => Uint8Array,
  Consider: (payload: EQMessage.Consider) => Uint8Array,
  Surname: (payload: EQMessage.Surname) => Uint8Array,
  GMTrainee: (payload: EQMessage.GMTrainee) => Uint8Array,
  GMTrainEnd: (payload: EQMessage.GMTrainEnd) => Uint8Array,
  GMSkillChange: (payload: EQMessage.GMSkillChange) => Uint8Array,
  Duel: (payload: EQMessage.Duel) => Uint8Array,
  DuelResponse: (payload: EQMessage.DuelResponse) => Uint8Array,
  SpawnAppearance: (payload: EQMessage.SpawnAppearance) => Uint8Array,
  BazaarInspect: (payload: EQMessage.BazaarInspect) => Uint8Array,
  Death: (payload: EQMessage.Death) => Uint8Array,
  MoveCoin: (payload: EQMessage.MoveCoin) => Uint8Array,
  ItemViewRequest: (payload: EQMessage.ItemViewRequest) => Uint8Array,
  MoveItem: (payload: EQMessage.MoveItem) => Uint8Array,
  ChannelMessage: (payload: EQMessage.ChannelMessage) => Uint8Array,
  WearChange: (payload: EQMessage.WearChange) => Uint8Array,
  Save: (payload: EQMessage.Save) => Uint8Array,
  Who_All: (payload: EQMessage.Who_All) => Uint8Array,
  GMZoneRequest: (payload: EQMessage.GMZoneRequest) => Uint8Array,
  DyeStruct: (payload: EQMessage.DyeStruct) => Uint8Array,
  LootingItem: (payload: EQMessage.LootingItem) => Uint8Array,
  GuildUpdate_PublicNote: (payload: EQMessage.GuildUpdate_PublicNote) => Uint8Array,
  GuildMOTD: (payload: EQMessage.GuildMOTD) => Uint8Array,
  SetRunMode: (payload: EQMessage.SetRunMode) => Uint8Array,
  GuildMakeLeader: (payload: EQMessage.GuildMakeLeader) => Uint8Array,
  GuildDemoteStruct: (payload: EQMessage.GuildDemoteStruct) => Uint8Array,
  GuildCommand: (payload: EQMessage.GuildCommand) => Uint8Array,
  GuildInviteAccept: (payload: EQMessage.GuildInviteAccept) => Uint8Array,
  ManaChange: (payload: EQMessage.ManaChange) => Uint8Array,
  MemorizeSpell: (payload: EQMessage.MemorizeSpell) => Uint8Array,
  SwapSpell: (payload: EQMessage.SwapSpell) => Uint8Array,
  CastSpell: (payload: EQMessage.CastSpell) => Uint8Array,
  DeleteItem: (payload: EQMessage.DeleteItem) => Uint8Array,
  CombatAbility: (payload: EQMessage.CombatAbility) => Uint8Array,
  Resurrect: (payload: EQMessage.Resurrect) => Uint8Array,
  GMSummon: (payload: EQMessage.GMSummon) => Uint8Array,
  TradeBusy: (payload: EQMessage.TradeBusy) => Uint8Array,
  TradeRequest: (payload: EQMessage.TradeRequest) => Uint8Array,
  CancelTrade: (payload: EQMessage.CancelTrade) => Uint8Array,
  TradeAccept: (payload: EQMessage.TradeAccept) => Uint8Array,
  RandomReq: (payload: EQMessage.RandomReq) => Uint8Array,
  SpellBuffPacket: (payload: EQMessage.SpellBuffPacket) => Uint8Array,
  GMName: (payload: EQMessage.GMName) => Uint8Array,
  GMKill: (payload: EQMessage.GMKill) => Uint8Array,
  GMLastName: (payload: EQMessage.GMLastName) => Uint8Array,
  GMToggle: (payload: EQMessage.GMToggle) => Uint8Array,
  LFG: (payload: EQMessage.LFG) => Uint8Array,
  TraderClick: (payload: EQMessage.TraderClick) => Uint8Array,
  Merchant_Click: (payload: EQMessage.Merchant_Click) => Uint8Array,
  BazaarSearch: (payload: EQMessage.BazaarSearch) => Uint8Array,
  Merchant_Sell: (payload: EQMessage.Merchant_Sell) => Uint8Array,
  Merchant_Purchase: (payload: EQMessage.Merchant_Purchase) => Uint8Array,
  ClickObjectAction: (payload: EQMessage.ClickObjectAction) => Uint8Array,
  ClickObject: (payload: EQMessage.ClickObject) => Uint8Array,
  TradeskillFavorites: (payload: EQMessage.TradeskillFavorites) => Uint8Array,
  RecipesSearch: (payload: EQMessage.RecipesSearch) => Uint8Array,
  RecipeAutoCombine: (payload: EQMessage.RecipeAutoCombine) => Uint8Array,
  NewCombine: (payload: EQMessage.NewCombine) => Uint8Array,
  ItemNamePacket: (payload: EQMessage.ItemNamePacket) => Uint8Array,
  AugmentItem: (payload: EQMessage.AugmentItem) => Uint8Array,
  ClickDoor: (payload: EQMessage.ClickDoor) => Uint8Array,
  FaceChange: (payload: EQMessage.FaceChange) => Uint8Array,
  GroupInvite: (payload: EQMessage.GroupInvite) => Uint8Array,
  GroupGeneric: (payload: EQMessage.GroupGeneric) => Uint8Array,
  GMEmoteZone: (payload: EQMessage.GMEmoteZone) => Uint8Array,
  Inspect: (payload: EQMessage.Inspect) => Uint8Array,
  DeleteSpell: (payload: EQMessage.DeleteSpell) => Uint8Array,
  PetitionBug: (payload: EQMessage.PetitionBug) => Uint8Array,
  BugStruct: (payload: EQMessage.BugStruct) => Uint8Array,
  Petition: (payload: EQMessage.Petition) => Uint8Array,
  PetitionUpdate: (payload: EQMessage.PetitionUpdate) => Uint8Array,
  PetCommand: (payload: EQMessage.PetCommand) => Uint8Array,
  BookRequest: (payload: EQMessage.BookRequest) => Uint8Array,
  Emote: (payload: EQMessage.Emote) => Uint8Array,
  GMDelCorpse: (payload: EQMessage.GMDelCorpse) => Uint8Array,
  GMKick: (payload: EQMessage.GMKick) => Uint8Array,
  Illusion: (payload: EQMessage.Illusion) => Uint8Array,
  BecomeNPC: (payload: EQMessage.BecomeNPC) => Uint8Array,
  EnvDamage2: (payload: EQMessage.EnvDamage2) => Uint8Array,
  CombatDamage: (payload: EQMessage.CombatDamage) => Uint8Array,
  AA_Action: (payload: EQMessage.AA_Action) => Uint8Array,
  TraderBuy: (payload: EQMessage.TraderBuy) => Uint8Array,
  Trader_ShowItems: (payload: EQMessage.Trader_ShowItems) => Uint8Array,
  PickPocket: (payload: EQMessage.PickPocket) => Uint8Array,
  BindWound: (payload: EQMessage.BindWound) => Uint8Array,
  TrackTarget: (payload: EQMessage.TrackTarget) => Uint8Array,
  Split: (payload: EQMessage.Split) => Uint8Array,
  StartTribute: (payload: EQMessage.StartTribute) => Uint8Array,
  TributeItem: (payload: EQMessage.TributeItem) => Uint8Array,
  TributeMoney: (payload: EQMessage.TributeMoney) => Uint8Array,
  SelectTributeReq: (payload: EQMessage.SelectTributeReq) => Uint8Array,
  TributeInfo: (payload: EQMessage.TributeInfo) => Uint8Array,
  uint32: (payload: EQMessage.uint32) => Uint8Array,
  ControlBoat: (payload: EQMessage.ControlBoat) => Uint8Array,
  FindPersonRequest: (payload: EQMessage.FindPersonRequest) => Uint8Array,
  BankerChange: (payload: EQMessage.BankerChange) => Uint8Array,
  SetTitle: (payload: EQMessage.SetTitle) => Uint8Array,
  ItemVerifyRequest: (payload: EQMessage.ItemVerifyRequest) => Uint8Array,
  ItemPacket: (payload: EQMessage.ItemPacket) => Uint8Array,
  ColoredText: (payload: EQMessage.ColoredText) => Uint8Array,
  ItemRecastDelay: (payload: EQMessage.ItemRecastDelay) => Uint8Array,
  FormattedMessage: (payload: EQMessage.FormattedMessage) => Uint8Array,
  InterruptCast: (payload: EQMessage.InterruptCast) => Uint8Array,
  Spawns: (payload: EQMessage.Spawns) => Uint8Array,
  TaskHistory: (payload: EQMessage.TaskHistory) => Uint8Array,
  Titles: (payload: EQMessage.Titles) => Uint8Array,
  Door: (payload: EQMessage.Door) => Uint8Array,
  ZonePoints: (payload: EQMessage.ZonePoints) => Uint8Array,
  TributeAbility: (payload: EQMessage.TributeAbility) => Uint8Array,
  GuildTributeAbility: (payload: EQMessage.GuildTributeAbility) => Uint8Array,
  TitleList: (payload: EQMessage.TitleList) => Uint8Array,
  AAExpUpdate: (payload: EQMessage.AAExpUpdate) => Uint8Array,
  Action: (payload: EQMessage.Action) => Uint8Array,
  AdventureRequestResponse: (payload: EQMessage.AdventureRequestResponse) => Uint8Array,
  AdventureFinish: (payload: EQMessage.AdventureFinish) => Uint8Array,
  AdventurePoints_Update: (payload: EQMessage.AdventurePoints_Update) => Uint8Array,
  Animation: (payload: EQMessage.Animation) => Uint8Array,
  AnnoyingZoneUnknown: (payload: EQMessage.AnnoyingZoneUnknown) => Uint8Array,
  BecomeTrader: (payload: EQMessage.BecomeTrader) => Uint8Array,
  BeginCast: (payload: EQMessage.BeginCast) => Uint8Array,
  Charm: (payload: EQMessage.Charm) => Uint8Array,
  Camera: (payload: EQMessage.Camera) => Uint8Array,
  ConsentResponse: (payload: EQMessage.ConsentResponse) => Uint8Array,
  EnduranceUpdate: (payload: EQMessage.EnduranceUpdate) => Uint8Array,
  ExpUpdate: (payload: EQMessage.ExpUpdate) => Uint8Array,
  Object: (payload: EQMessage.Object) => Uint8Array,
  GroupJoin: (payload: EQMessage.GroupJoin) => Uint8Array,
  GuildJoin: (payload: EQMessage.GuildJoin) => Uint8Array,
  GuildManageRemove: (payload: EQMessage.GuildManageRemove) => Uint8Array,
  GuildManageStatus: (payload: EQMessage.GuildManageStatus) => Uint8Array,
  GuildMemberUpdate: (payload: EQMessage.GuildMemberUpdate) => Uint8Array,
  SpawnHPUpdate: (payload: EQMessage.SpawnHPUpdate) => Uint8Array,
  IncreaseStat: (payload: EQMessage.IncreaseStat) => Uint8Array,
  ItemVerifyReply: (payload: EQMessage.ItemVerifyReply) => Uint8Array,
  LFG_Appearance: (payload: EQMessage.LFG_Appearance) => Uint8Array,
  LeadershipExpUpdate: (payload: EQMessage.LeadershipExpUpdate) => Uint8Array,
  LevelAppearance: (payload: EQMessage.LevelAppearance) => Uint8Array,
  LevelUpdate: (payload: EQMessage.LevelUpdate) => Uint8Array,
  ManaUpdate: (payload: EQMessage.ManaUpdate) => Uint8Array,
  MobEnduranceUpdate: (payload: EQMessage.MobEnduranceUpdate) => Uint8Array,
  MobHealth: (payload: EQMessage.MobHealth) => Uint8Array,
  MobManaUpdate: (payload: EQMessage.MobManaUpdate) => Uint8Array,
  MobRename: (payload: EQMessage.MobRename) => Uint8Array,
  moneyOnCorpseStruct: (payload: EQMessage.moneyOnCorpseStruct) => Uint8Array,
  MoneyUpdate: (payload: EQMessage.MoneyUpdate) => Uint8Array,
  MoveDoor: (payload: EQMessage.MoveDoor) => Uint8Array,
  NewZone: (payload: EQMessage.NewZone) => Uint8Array,
  PlayerProfile: (payload: EQMessage.PlayerProfile) => Uint8Array,
  ZoneInSendName: (payload: EQMessage.ZoneInSendName) => Uint8Array,
  RandomReply: (payload: EQMessage.RandomReply) => Uint8Array,
  RecipeReply: (payload: EQMessage.RecipeReply) => Uint8Array,
  RequestClientZoneChange: (payload: EQMessage.RequestClientZoneChange) => Uint8Array,
  AATable: (payload: EQMessage.AATable) => Uint8Array,
  SetTitleReply: (payload: EQMessage.SetTitleReply) => Uint8Array,
  Merchant_DelItem: (payload: EQMessage.Merchant_DelItem) => Uint8Array,
  SimpleMessage: (payload: EQMessage.SimpleMessage) => Uint8Array,
  SkillUpdate: (payload: EQMessage.SkillUpdate) => Uint8Array,
  Arrow: (payload: EQMessage.Arrow) => Uint8Array,
  SpellEffect: (payload: EQMessage.SpellEffect) => Uint8Array,
  Stamina: (payload: EQMessage.Stamina) => Uint8Array,
  Stun: (payload: EQMessage.Stun) => Uint8Array,
  TargetReject: (payload: EQMessage.TargetReject) => Uint8Array,
  TimeOfDay: (payload: EQMessage.TimeOfDay) => Uint8Array,
  TradeCoin: (payload: EQMessage.TradeCoin) => Uint8Array,
  TradeMoneyUpdate: (payload: EQMessage.TradeMoneyUpdate) => Uint8Array,
  TraderDelItem: (payload: EQMessage.TraderDelItem) => Uint8Array,
  TraderItemUpdate: (payload: EQMessage.TraderItemUpdate) => Uint8Array,
  UpdateLeadershipAA: (payload: EQMessage.UpdateLeadershipAA) => Uint8Array,
  Weather: (payload: EQMessage.Weather) => Uint8Array,
  ZoneChange: (payload: EQMessage.ZoneChange) => Uint8Array,
  ZoneInUnknown: (payload: EQMessage.ZoneInUnknown) => Uint8Array,
  AcceptNewTask: (payload: EQMessage.AcceptNewTask) => Uint8Array,
  AdventureInfo: (payload: EQMessage.AdventureInfo) => Uint8Array,
  ApplyPoison: (payload: EQMessage.ApplyPoison) => Uint8Array,
  ApproveWorld: (payload: EQMessage.ApproveWorld) => Uint8Array,
  BandolierItem: (payload: EQMessage.BandolierItem) => Uint8Array,
  BecomeCorpse: (payload: EQMessage.BecomeCorpse) => Uint8Array,
  CancelTask: (payload: EQMessage.CancelTask) => Uint8Array,
  DynamicWall: (payload: EQMessage.DynamicWall) => Uint8Array,
  LFGuild_SearchPlayer: (payload: EQMessage.LFGuild_SearchPlayer) => Uint8Array,
  LoadSpellSet: (payload: EQMessage.LoadSpellSet) => Uint8Array,
  LogServer: (payload: EQMessage.LogServer) => Uint8Array,
  OnLevelMessage: (payload: EQMessage.OnLevelMessage) => Uint8Array,
  PlayMP3: (payload: EQMessage.PlayMP3) => Uint8Array,
  PotionBeltItem: (payload: EQMessage.PotionBeltItem) => Uint8Array,
  PVPStatsEntry: (payload: EQMessage.PVPStatsEntry) => Uint8Array,
  BugReport: (payload: EQMessage.BugReport) => Uint8Array,
  SpecialMesg: (payload: EQMessage.SpecialMesg) => Uint8Array,
  TaskActivity: (payload: EQMessage.TaskActivity) => Uint8Array,
  TaskDescription: (payload: EQMessage.TaskDescription) => Uint8Array,
  ZoneUnavail: (payload: EQMessage.ZoneUnavail) => Uint8Array,
  
}

export interface EQServerPacket {


LoginMessage: (bytes: Uint8Array) => EQMessage.LoginMessage,
  LoginReply: (bytes: Uint8Array) => EQMessage.LoginReply,
  PlayEverquest: (bytes: Uint8Array) => EQMessage.PlayEverquest,
  PlayEverquestResponse: (bytes: Uint8Array) => EQMessage.PlayEverquestResponse,
  LoginRequest: (bytes: Uint8Array) => EQMessage.LoginRequest,
  LoginServerResponse: (bytes: Uint8Array) => EQMessage.LoginServerResponse,
  NameApprove: (bytes: Uint8Array) => EQMessage.NameApprove,
  CharCreate: (bytes: Uint8Array) => EQMessage.CharCreate,
  String: (bytes: Uint8Array) => EQMessage.String,
  Int: (bytes: Uint8Array) => EQMessage.Int,
  EnterWorld: (bytes: Uint8Array) => EQMessage.EnterWorld,
  GuildsList: (bytes: Uint8Array) => EQMessage.GuildsList,
  CharacterSelect: (bytes: Uint8Array) => EQMessage.CharacterSelect,
  LoginInfo: (bytes: Uint8Array) => EQMessage.LoginInfo,
  Zero: (bytes: Uint8Array) => EQMessage.Zero,
  ZoneServerInfo: (bytes: Uint8Array) => EQMessage.ZoneServerInfo,
  WebInitiateConnection: (bytes: Uint8Array) => EQMessage.WebInitiateConnection,
  ClientZoneEntry: (bytes: Uint8Array) => EQMessage.ClientZoneEntry,
  SetServerFilter: (bytes: Uint8Array) => EQMessage.SetServerFilter,
  ClientError: (bytes: Uint8Array) => EQMessage.ClientError,
  ApproveZone: (bytes: Uint8Array) => EQMessage.ApproveZone,
  PlayerPositionUpdateServer: (bytes: Uint8Array) => EQMessage.PlayerPositionUpdateServer,
  Consent: (bytes: Uint8Array) => EQMessage.Consent,
  ClientTarget: (bytes: Uint8Array) => EQMessage.ClientTarget,
  Shielding: (bytes: Uint8Array) => EQMessage.Shielding,
  EntityId: (bytes: Uint8Array) => EQMessage.EntityId,
  AdventureRequest: (bytes: Uint8Array) => EQMessage.AdventureRequest,
  Bool: (bytes: Uint8Array) => EQMessage.Bool,
  Consume: (bytes: Uint8Array) => EQMessage.Consume,
  AdventureMerchant: (bytes: Uint8Array) => EQMessage.AdventureMerchant,
  Adventure_Purchase: (bytes: Uint8Array) => EQMessage.Adventure_Purchase,
  Consider: (bytes: Uint8Array) => EQMessage.Consider,
  Surname: (bytes: Uint8Array) => EQMessage.Surname,
  GMTrainee: (bytes: Uint8Array) => EQMessage.GMTrainee,
  GMTrainEnd: (bytes: Uint8Array) => EQMessage.GMTrainEnd,
  GMSkillChange: (bytes: Uint8Array) => EQMessage.GMSkillChange,
  Duel: (bytes: Uint8Array) => EQMessage.Duel,
  DuelResponse: (bytes: Uint8Array) => EQMessage.DuelResponse,
  SpawnAppearance: (bytes: Uint8Array) => EQMessage.SpawnAppearance,
  BazaarInspect: (bytes: Uint8Array) => EQMessage.BazaarInspect,
  Death: (bytes: Uint8Array) => EQMessage.Death,
  MoveCoin: (bytes: Uint8Array) => EQMessage.MoveCoin,
  ItemViewRequest: (bytes: Uint8Array) => EQMessage.ItemViewRequest,
  MoveItem: (bytes: Uint8Array) => EQMessage.MoveItem,
  ChannelMessage: (bytes: Uint8Array) => EQMessage.ChannelMessage,
  WearChange: (bytes: Uint8Array) => EQMessage.WearChange,
  Save: (bytes: Uint8Array) => EQMessage.Save,
  Who_All: (bytes: Uint8Array) => EQMessage.Who_All,
  GMZoneRequest: (bytes: Uint8Array) => EQMessage.GMZoneRequest,
  DyeStruct: (bytes: Uint8Array) => EQMessage.DyeStruct,
  LootingItem: (bytes: Uint8Array) => EQMessage.LootingItem,
  GuildUpdate_PublicNote: (bytes: Uint8Array) => EQMessage.GuildUpdate_PublicNote,
  GuildMOTD: (bytes: Uint8Array) => EQMessage.GuildMOTD,
  SetRunMode: (bytes: Uint8Array) => EQMessage.SetRunMode,
  GuildMakeLeader: (bytes: Uint8Array) => EQMessage.GuildMakeLeader,
  GuildDemoteStruct: (bytes: Uint8Array) => EQMessage.GuildDemoteStruct,
  GuildCommand: (bytes: Uint8Array) => EQMessage.GuildCommand,
  GuildInviteAccept: (bytes: Uint8Array) => EQMessage.GuildInviteAccept,
  ManaChange: (bytes: Uint8Array) => EQMessage.ManaChange,
  MemorizeSpell: (bytes: Uint8Array) => EQMessage.MemorizeSpell,
  SwapSpell: (bytes: Uint8Array) => EQMessage.SwapSpell,
  CastSpell: (bytes: Uint8Array) => EQMessage.CastSpell,
  DeleteItem: (bytes: Uint8Array) => EQMessage.DeleteItem,
  CombatAbility: (bytes: Uint8Array) => EQMessage.CombatAbility,
  Resurrect: (bytes: Uint8Array) => EQMessage.Resurrect,
  GMSummon: (bytes: Uint8Array) => EQMessage.GMSummon,
  TradeBusy: (bytes: Uint8Array) => EQMessage.TradeBusy,
  TradeRequest: (bytes: Uint8Array) => EQMessage.TradeRequest,
  CancelTrade: (bytes: Uint8Array) => EQMessage.CancelTrade,
  TradeAccept: (bytes: Uint8Array) => EQMessage.TradeAccept,
  RandomReq: (bytes: Uint8Array) => EQMessage.RandomReq,
  SpellBuffPacket: (bytes: Uint8Array) => EQMessage.SpellBuffPacket,
  GMName: (bytes: Uint8Array) => EQMessage.GMName,
  GMKill: (bytes: Uint8Array) => EQMessage.GMKill,
  GMLastName: (bytes: Uint8Array) => EQMessage.GMLastName,
  GMToggle: (bytes: Uint8Array) => EQMessage.GMToggle,
  LFG: (bytes: Uint8Array) => EQMessage.LFG,
  TraderClick: (bytes: Uint8Array) => EQMessage.TraderClick,
  Merchant_Click: (bytes: Uint8Array) => EQMessage.Merchant_Click,
  BazaarSearch: (bytes: Uint8Array) => EQMessage.BazaarSearch,
  Merchant_Sell: (bytes: Uint8Array) => EQMessage.Merchant_Sell,
  Merchant_Purchase: (bytes: Uint8Array) => EQMessage.Merchant_Purchase,
  ClickObjectAction: (bytes: Uint8Array) => EQMessage.ClickObjectAction,
  ClickObject: (bytes: Uint8Array) => EQMessage.ClickObject,
  TradeskillFavorites: (bytes: Uint8Array) => EQMessage.TradeskillFavorites,
  RecipesSearch: (bytes: Uint8Array) => EQMessage.RecipesSearch,
  RecipeAutoCombine: (bytes: Uint8Array) => EQMessage.RecipeAutoCombine,
  NewCombine: (bytes: Uint8Array) => EQMessage.NewCombine,
  ItemNamePacket: (bytes: Uint8Array) => EQMessage.ItemNamePacket,
  AugmentItem: (bytes: Uint8Array) => EQMessage.AugmentItem,
  ClickDoor: (bytes: Uint8Array) => EQMessage.ClickDoor,
  FaceChange: (bytes: Uint8Array) => EQMessage.FaceChange,
  GroupInvite: (bytes: Uint8Array) => EQMessage.GroupInvite,
  GroupGeneric: (bytes: Uint8Array) => EQMessage.GroupGeneric,
  GMEmoteZone: (bytes: Uint8Array) => EQMessage.GMEmoteZone,
  Inspect: (bytes: Uint8Array) => EQMessage.Inspect,
  DeleteSpell: (bytes: Uint8Array) => EQMessage.DeleteSpell,
  PetitionBug: (bytes: Uint8Array) => EQMessage.PetitionBug,
  BugStruct: (bytes: Uint8Array) => EQMessage.BugStruct,
  Petition: (bytes: Uint8Array) => EQMessage.Petition,
  PetitionUpdate: (bytes: Uint8Array) => EQMessage.PetitionUpdate,
  PetCommand: (bytes: Uint8Array) => EQMessage.PetCommand,
  BookRequest: (bytes: Uint8Array) => EQMessage.BookRequest,
  Emote: (bytes: Uint8Array) => EQMessage.Emote,
  GMDelCorpse: (bytes: Uint8Array) => EQMessage.GMDelCorpse,
  GMKick: (bytes: Uint8Array) => EQMessage.GMKick,
  Illusion: (bytes: Uint8Array) => EQMessage.Illusion,
  BecomeNPC: (bytes: Uint8Array) => EQMessage.BecomeNPC,
  EnvDamage2: (bytes: Uint8Array) => EQMessage.EnvDamage2,
  CombatDamage: (bytes: Uint8Array) => EQMessage.CombatDamage,
  AA_Action: (bytes: Uint8Array) => EQMessage.AA_Action,
  TraderBuy: (bytes: Uint8Array) => EQMessage.TraderBuy,
  Trader_ShowItems: (bytes: Uint8Array) => EQMessage.Trader_ShowItems,
  PickPocket: (bytes: Uint8Array) => EQMessage.PickPocket,
  BindWound: (bytes: Uint8Array) => EQMessage.BindWound,
  TrackTarget: (bytes: Uint8Array) => EQMessage.TrackTarget,
  Split: (bytes: Uint8Array) => EQMessage.Split,
  StartTribute: (bytes: Uint8Array) => EQMessage.StartTribute,
  TributeItem: (bytes: Uint8Array) => EQMessage.TributeItem,
  TributeMoney: (bytes: Uint8Array) => EQMessage.TributeMoney,
  SelectTributeReq: (bytes: Uint8Array) => EQMessage.SelectTributeReq,
  TributeInfo: (bytes: Uint8Array) => EQMessage.TributeInfo,
  uint32: (bytes: Uint8Array) => EQMessage.uint32,
  ControlBoat: (bytes: Uint8Array) => EQMessage.ControlBoat,
  FindPersonRequest: (bytes: Uint8Array) => EQMessage.FindPersonRequest,
  BankerChange: (bytes: Uint8Array) => EQMessage.BankerChange,
  SetTitle: (bytes: Uint8Array) => EQMessage.SetTitle,
  ItemVerifyRequest: (bytes: Uint8Array) => EQMessage.ItemVerifyRequest,
  ItemPacket: (bytes: Uint8Array) => EQMessage.ItemPacket,
  ColoredText: (bytes: Uint8Array) => EQMessage.ColoredText,
  ItemRecastDelay: (bytes: Uint8Array) => EQMessage.ItemRecastDelay,
  FormattedMessage: (bytes: Uint8Array) => EQMessage.FormattedMessage,
  InterruptCast: (bytes: Uint8Array) => EQMessage.InterruptCast,
  Spawns: (bytes: Uint8Array) => EQMessage.Spawns,
  TaskHistory: (bytes: Uint8Array) => EQMessage.TaskHistory,
  Titles: (bytes: Uint8Array) => EQMessage.Titles,
  Door: (bytes: Uint8Array) => EQMessage.Door,
  ZonePoints: (bytes: Uint8Array) => EQMessage.ZonePoints,
  TributeAbility: (bytes: Uint8Array) => EQMessage.TributeAbility,
  GuildTributeAbility: (bytes: Uint8Array) => EQMessage.GuildTributeAbility,
  TitleList: (bytes: Uint8Array) => EQMessage.TitleList,
  AAExpUpdate: (bytes: Uint8Array) => EQMessage.AAExpUpdate,
  Action: (bytes: Uint8Array) => EQMessage.Action,
  AdventureRequestResponse: (bytes: Uint8Array) => EQMessage.AdventureRequestResponse,
  AdventureFinish: (bytes: Uint8Array) => EQMessage.AdventureFinish,
  AdventurePoints_Update: (bytes: Uint8Array) => EQMessage.AdventurePoints_Update,
  Animation: (bytes: Uint8Array) => EQMessage.Animation,
  AnnoyingZoneUnknown: (bytes: Uint8Array) => EQMessage.AnnoyingZoneUnknown,
  BecomeTrader: (bytes: Uint8Array) => EQMessage.BecomeTrader,
  BeginCast: (bytes: Uint8Array) => EQMessage.BeginCast,
  Charm: (bytes: Uint8Array) => EQMessage.Charm,
  Camera: (bytes: Uint8Array) => EQMessage.Camera,
  ConsentResponse: (bytes: Uint8Array) => EQMessage.ConsentResponse,
  EnduranceUpdate: (bytes: Uint8Array) => EQMessage.EnduranceUpdate,
  ExpUpdate: (bytes: Uint8Array) => EQMessage.ExpUpdate,
  Object: (bytes: Uint8Array) => EQMessage.Object,
  GroupJoin: (bytes: Uint8Array) => EQMessage.GroupJoin,
  GuildJoin: (bytes: Uint8Array) => EQMessage.GuildJoin,
  GuildManageRemove: (bytes: Uint8Array) => EQMessage.GuildManageRemove,
  GuildManageStatus: (bytes: Uint8Array) => EQMessage.GuildManageStatus,
  GuildMemberUpdate: (bytes: Uint8Array) => EQMessage.GuildMemberUpdate,
  SpawnHPUpdate: (bytes: Uint8Array) => EQMessage.SpawnHPUpdate,
  IncreaseStat: (bytes: Uint8Array) => EQMessage.IncreaseStat,
  ItemVerifyReply: (bytes: Uint8Array) => EQMessage.ItemVerifyReply,
  LFG_Appearance: (bytes: Uint8Array) => EQMessage.LFG_Appearance,
  LeadershipExpUpdate: (bytes: Uint8Array) => EQMessage.LeadershipExpUpdate,
  LevelAppearance: (bytes: Uint8Array) => EQMessage.LevelAppearance,
  LevelUpdate: (bytes: Uint8Array) => EQMessage.LevelUpdate,
  ManaUpdate: (bytes: Uint8Array) => EQMessage.ManaUpdate,
  MobEnduranceUpdate: (bytes: Uint8Array) => EQMessage.MobEnduranceUpdate,
  MobHealth: (bytes: Uint8Array) => EQMessage.MobHealth,
  MobManaUpdate: (bytes: Uint8Array) => EQMessage.MobManaUpdate,
  MobRename: (bytes: Uint8Array) => EQMessage.MobRename,
  moneyOnCorpseStruct: (bytes: Uint8Array) => EQMessage.moneyOnCorpseStruct,
  MoneyUpdate: (bytes: Uint8Array) => EQMessage.MoneyUpdate,
  MoveDoor: (bytes: Uint8Array) => EQMessage.MoveDoor,
  NewZone: (bytes: Uint8Array) => EQMessage.NewZone,
  PlayerProfile: (bytes: Uint8Array) => EQMessage.PlayerProfile,
  ZoneInSendName: (bytes: Uint8Array) => EQMessage.ZoneInSendName,
  RandomReply: (bytes: Uint8Array) => EQMessage.RandomReply,
  RecipeReply: (bytes: Uint8Array) => EQMessage.RecipeReply,
  RequestClientZoneChange: (bytes: Uint8Array) => EQMessage.RequestClientZoneChange,
  AATable: (bytes: Uint8Array) => EQMessage.AATable,
  SetTitleReply: (bytes: Uint8Array) => EQMessage.SetTitleReply,
  Merchant_DelItem: (bytes: Uint8Array) => EQMessage.Merchant_DelItem,
  SimpleMessage: (bytes: Uint8Array) => EQMessage.SimpleMessage,
  SkillUpdate: (bytes: Uint8Array) => EQMessage.SkillUpdate,
  Arrow: (bytes: Uint8Array) => EQMessage.Arrow,
  SpellEffect: (bytes: Uint8Array) => EQMessage.SpellEffect,
  Stamina: (bytes: Uint8Array) => EQMessage.Stamina,
  Stun: (bytes: Uint8Array) => EQMessage.Stun,
  TargetReject: (bytes: Uint8Array) => EQMessage.TargetReject,
  TimeOfDay: (bytes: Uint8Array) => EQMessage.TimeOfDay,
  TradeCoin: (bytes: Uint8Array) => EQMessage.TradeCoin,
  TradeMoneyUpdate: (bytes: Uint8Array) => EQMessage.TradeMoneyUpdate,
  TraderDelItem: (bytes: Uint8Array) => EQMessage.TraderDelItem,
  TraderItemUpdate: (bytes: Uint8Array) => EQMessage.TraderItemUpdate,
  UpdateLeadershipAA: (bytes: Uint8Array) => EQMessage.UpdateLeadershipAA,
  Weather: (bytes: Uint8Array) => EQMessage.Weather,
  ZoneChange: (bytes: Uint8Array) => EQMessage.ZoneChange,
  ZoneInUnknown: (bytes: Uint8Array) => EQMessage.ZoneInUnknown,
  AcceptNewTask: (bytes: Uint8Array) => EQMessage.AcceptNewTask,
  AdventureInfo: (bytes: Uint8Array) => EQMessage.AdventureInfo,
  ApplyPoison: (bytes: Uint8Array) => EQMessage.ApplyPoison,
  ApproveWorld: (bytes: Uint8Array) => EQMessage.ApproveWorld,
  BandolierItem: (bytes: Uint8Array) => EQMessage.BandolierItem,
  BecomeCorpse: (bytes: Uint8Array) => EQMessage.BecomeCorpse,
  CancelTask: (bytes: Uint8Array) => EQMessage.CancelTask,
  DynamicWall: (bytes: Uint8Array) => EQMessage.DynamicWall,
  LFGuild_SearchPlayer: (bytes: Uint8Array) => EQMessage.LFGuild_SearchPlayer,
  LoadSpellSet: (bytes: Uint8Array) => EQMessage.LoadSpellSet,
  LogServer: (bytes: Uint8Array) => EQMessage.LogServer,
  OnLevelMessage: (bytes: Uint8Array) => EQMessage.OnLevelMessage,
  PlayMP3: (bytes: Uint8Array) => EQMessage.PlayMP3,
  PotionBeltItem: (bytes: Uint8Array) => EQMessage.PotionBeltItem,
  PVPStatsEntry: (bytes: Uint8Array) => EQMessage.PVPStatsEntry,
  BugReport: (bytes: Uint8Array) => EQMessage.BugReport,
  SpecialMesg: (bytes: Uint8Array) => EQMessage.SpecialMesg,
  TaskActivity: (bytes: Uint8Array) => EQMessage.TaskActivity,
  TaskDescription: (bytes: Uint8Array) => EQMessage.TaskDescription,
  ZoneUnavail: (bytes: Uint8Array) => EQMessage.ZoneUnavail,
  

}
